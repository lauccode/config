" BASIC
set nocompatible
syntax enable
filetype plugin on
" to select tab with mouse
" also to have buttons for termdebug !
set mouse=a

" MOVE
"  % key will be your friend. This key will jump between start and end of 
" curly braces quickly.

" COLOR SCHEME
" :colo   (to check colorscheme used)
" :colo delek

" REPEAT LAST COMMAND
" The last command entered with ':' can be repeated with @: and further repeats can be done with @@
" @:,@@
" This is useful for commands like :bnext or :cNext.

" CTAGS
" command! MakeTags !ctags -R .
" ^]        jump to tag under cursor
" g^]     list tags
" ^t        jump back up the tag stack

" FINDING FILES
" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**
" Display all matching files when we tab
set wildmenu
" hit tab to :find by partial match
" Use * to make it fuzzy
" :b lets you autocomplete any open buffer

" FINDING WORDS
" :vimgrep word *.cpp *.h

" AUTOCOMPLETE
" ^x^n        just for this file
" ^x^f        for filenames(works with path tricks)
" ^x ^]        for tags only
" ^n            complete
" ^p             go back

" FILE BROWSING
let g:netrw_banner = 0
let g:netrw_browse_split=4
let g:netrw_altv=1
let g:netrw_liststyle=3
let g:netrw_list_hide=netrw_gitignore#Hide()
" let g:netrw_list_hide.=",\(^\|\s\s\)\zs\.\S\+'
" :edit a folder to open file browser
" <CR>/v/t to open in an h-split/v-split/tab
" check |netrw-browse-maps| for more mappings

" BUILD
" set makeprg=ninja
" :make to run
" :cl to list errors
" :cc# to jump to error by number
" :cn n :cp to navigate
" :compiler <TAB>  (choose compiler to use)

" SNIPPETS:
" Read an empty HTML template and move cursor to title
nnoremap ,html :-1read $HOME/.vim/.skeleton.html<CR>3jwf>a

" TERMINAL
" exit from terminal : CTRL+\CTRL+n
" :terminal
" :terminal make  (launch make in terminal)
" launch script to build and use :
" :cbuffer (parse terminal buffer to fill quickfixlist)
" :cn, cp  (next, previous error of quickfixlist)

" DEBUG
packadd termdebug
" Termdebug bin/exe
" GDB cmd :
" b main  (breakpoint on main)
" r       (run)
" s       (step)
" n       (next)
" S+k     (evaluate variable under cursor)
" :let termdebugger="rust-gdb"
" we navigate to the source code view and type Ctrl+w and L to have it on the right.

" TAB
" :tabedit namefile.txt

" SEARCH AND REPLACE 
" to have preview :
" https://github.com/osyo-manga/vim-over
" Delete all line where "Bianry File" is present
" g/Binary File/d
